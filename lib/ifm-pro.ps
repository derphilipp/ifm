% Ifm version 1.0, Copyright (C) 1997 G. Hutchings
% Ifm comes with ABSOLUTELY NO WARRANTY.
% This is free software, and you are welcome to redistribute it
% under certain conditions; see the file COPYING for details.

% Default IFM PostScript prolog.

% Start a new page.
/beginpage {			% WIDTH HEIGHT ROTFLAG beginpage
    /curmatrix matrix currentmatrix def

    % Page orientation.
    {
	/pagewidth origpageheight def
	/pageheight origpagewidth def
	/mapwidth origmapheight def
	/mapheight origmapwidth def
	90 rotate
	0 pageheight neg translate
    } {
	/pagewidth origpagewidth def
	/pageheight origpageheight def
	/mapwidth origmapwidth def
	/mapheight origmapheight def
    } ifelse

    % Leave space for title if required.
    showtitle {
	/pageheight pageheight titlefontsize 1.2 mul sub def
    } if

    % Get width and height of page contents.
    /bp-height exch def
    /bp-width exch def

    % Calculate box size.
    /bp-boxx pagewidth pagemargin 2 mul sub mapwidth bp-width max div def
    /bp-boxy pageheight pagemargin 2 mul sub mapheight bp-height max div def
    /boxsize bp-boxx bp-boxy min def

    % Calculate page offsets.
    /widthoffset pagewidth bp-width boxsize mul sub 2 div def
    /heightoffset pageheight bp-height boxsize mul sub 2 div def

    % Put border around page if required.
    showborder {
	newpath
	pagemargin pagemargin moveto
	pagewidth pagemargin 2 mul sub 0 rlineto
	0 pageheight pagemargin 2 mul sub rlineto
	pagewidth pagemargin 2 mul sub neg 0 rlineto
	closepath stroke
    } if

    % Draw title if required.
    showtitle {
	titlefont titlefontsize selectfont

	titlestring
	pagewidth 2 div
	pageheight pagemargin sub titlefontsize add
	centredtext
    } if

    % Calculate font scaling factor.
    /scalewidth mapwidth dup bp-width max div def
    /scaleheight mapheight dup bp-height max div def
    /fontscale scalewidth scaleheight min def
} def

% Start a map section.
/map {				% STRING X Y map
    % Draw map title.
    mapfont mapfontsize selectfont
    pagepos centredtext
} def

% Draw a room. 
/room {				% STRING X Y [ITEMLIST] ITEMS PUZZLE room
    % Convert and save arguments.
    /rm-puzzle exch def
    /rm-items exch def
    rm-items {
	/rm-itemlist exch def
    } if

    pagepos
    /rm-ypos exch def
    /rm-xpos exch def
    /rm-string exch def

    gsave
	% Mark puzzle if required.
	rm-puzzle {
	    [ 2 2 ] 2 setdash
	} if

	% Draw box around room.
	roomlinewidth setlinewidth
	newpath 
	rm-xpos rm-ypos moveto
	boxsize roomwidth 2 div mul
	boxsize roomheight 2 div mul
	rmoveto

	roomwidth boxsize mul neg 0 rlineto
	0 roomheight boxsize mul neg rlineto
	roomwidth boxsize mul 0 rlineto
	closepath

	% Fill it.
	gsave roomshading setgray fill grestore stroke

	% Draw room text (and item text if required).
	roomfont roomfontsize fontscale mul selectfont

	rm-items showitems and {
	    rm-string rm-xpos rm-ypos
	    boxsize roomheight mul 1 roomitemratio sub 2 div mul add
	    boxsize roomwidth mul
	    boxsize roomheight mul roomitemratio mul
	    boxtext

	    itemfont itemfontsize fontscale mul selectfont

	    rm-itemlist rm-xpos rm-ypos
	    boxsize roomheight mul roomitemratio 2 div mul sub
	    boxsize roomwidth mul
	    boxsize roomheight mul 1 roomitemratio sub mul
	    boxtext
	}{
	    rm-string rm-xpos rm-ypos
	    boxsize roomwidth mul
	    boxsize roomheight mul
	    boxtext
	} ifelse
    grestore
} def

% Draw a link.
/link {				% [ X Y ... ] UPDOWN INOUT ONEWAY SPECIAL link
    % Save arguments.
    /ln-special exch def
    /ln-oneway exch def
    /ln-inout exch def
    /ln-updown exch def
    /ln-points exch def
    /ln-np ln-points length def

    gsave
	% Mark special if required.
	ln-special {
	    [ 2 2 ] 2 setdash
	} if

	% Draw line.
	linklinewidth setlinewidth
 	/ln-lines ln-points length 2 div 1 sub def
 	/ln-x ln-points 0 get def
 	/ln-y ln-points 1 get def
 	ln-x ln-y pagepos moveto
 
 	1 1 ln-lines {
 	    /ln-i exch def
 	    /ln-x ln-points ln-i 2 mul get def
 	    /ln-y ln-points ln-i 2 mul 1 add get def
 
 	    ln-i ln-lines eq {
 		ln-x ln-y pagepos lineto
 	    }{
 		/ln-xn ln-points ln-i 1 add 2 mul get def
 		/ln-yn ln-points ln-i 1 add 2 mul 1 add get def
 		ln-x ln-y pagepos ln-xn ln-yn pagepos 10 arcto
 	    } ifelse
 	} for
 
 	stroke

	% Mark updown/inout if required.
 	ln-updown ln-inout or {
 	    /ln-x ln-points ln-np 4 sub get def
 	    /ln-y ln-points ln-np 3 sub get def
 	    /ln-xn ln-points ln-np 2 sub get def
 	    /ln-yn ln-points ln-np 1 sub get def
 	    /ln-xmid ln-x ln-xn add 2 div def
 	    /ln-ymid ln-y ln-yn add 2 div def
 
 	    labelfont labelfontsize fontscale mul selectfont
 
 	    ln-updown {
 		(U/D)
 	    }{
 		(I/O)
 	    } ifelse ln-xmid ln-ymid pagepos centredtext
 	} if

	% Draw arrow if oneway.
	ln-oneway {
 	    /ln-x ln-points ln-np 4 sub get def
 	    /ln-y ln-points ln-np 3 sub get def
 	    /ln-xn ln-points ln-np 2 sub get def
 	    /ln-yn ln-points ln-np 1 sub get def
	    ln-x ln-y pagepos ln-xn ln-yn pagepos arrowhead
	} if
    grestore
} def

% End a page.
/endpage {			% endpage
    curmatrix setmatrix
    showpage
} def

% Draw some text in a box.
/boxtext {			% STRING X Y WIDTH HEIGHT text
    % Save arguments.
    /bt-height exch def
    /bt-width exch def
    /bt-ypos exch def
    /bt-xpos exch def

    % Get text lines.
    bt-width bt-height splittext
    /bt-factor exch 1 textmargin sub mul def
    /bt-lines exch def
    /bt-numlines bt-lines length def

    gsave
	% Move to centre of box.
	bt-xpos bt-ypos translate

	% Draw box around text if required.
	debug {
	    newpath
	    bt-width 2 div bt-height 2 div moveto
	    bt-width neg 0 rlineto
	    0 bt-height neg rlineto
	    bt-width 0 rlineto
	    closepath stroke
	} if

	% Scale box.
	bt-factor dup scale

	% Draw each line.
	/bt-linegap currentfontsize textspacing mul def
	/bt-lineheight currentfontsize bt-linegap add def
	/bt-textheight bt-numlines bt-lineheight mul bt-linegap sub def

	0 1 bt-numlines 1 sub {
	    % Get string.
	    dup bt-lines exch get

	    % Get its Y offset.
	    exch bt-numlines 1 sub exch sub 0.5 add bt-lineheight mul 
	    bt-textheight 2 div sub

	    % Draw it.
	    0 exch centredtext
	} for
    grestore
} def

% Split a string into pieces for filling.
/splittext {			% STRING WIDTH HEIGHT split LINES FACTOR
    % Save arguments.
    /st-height exch def
    /st-width exch def
    /st-str exch def

    % Build pieces.
    /st-lines [
	st-str st-width {} breakline
    ] def

    % Set scale factor.
    /st-factor 1 def

    % See if it needs squishing widthwise.
    st-lines {
        stringwidth pop st-width exch div st-factor min /st-factor exch def
    } forall

    % Ditto heightwise.
    st-lines length
    textspacing 1 add mul
    currentfontsize mul
    st-height exch div st-factor min /st-factor exch def

    st-lines st-factor
} def

% Line breaking algorithm (program 12 from Adobe Cookbook).
/breakline {			% STRING WIDTH PROC breakline
    /bl-proc exch def
    /bl-linewidth exch def
    addspace /bl-textstring exch def

    % Get width of a space in current font.
    /bl-breakwidth ( ) stringwidth pop def

    % Typeset width of the current line.
    /bl-curwidth 0 def

    % Index of the most recent space encountered in the text.
    /bl-lastwordbreak 0 def

    % Index of the first character on the current line.
    /bl-startchar 0 def

    % Remaining text.
    /bl-restoftext bl-textstring def

    % Break into lines.
    {
	% Find next word.
	bl-restoftext ( ) search {
	    /bl-nextword exch def pop
	    /bl-restoftext exch def
	    /bl-wordwidth bl-nextword stringwidth pop def

	    % If next word won't fit, process current line (if any)
	    % and start a new one.  If it will, tag it on.
	    bl-curwidth bl-wordwidth add bl-linewidth gt {
		bl-lastwordbreak 0 gt {
		    bl-textstring bl-startchar
		    bl-lastwordbreak bl-startchar sub
		    getinterval bl-proc
		} if

		/bl-startchar bl-lastwordbreak def
		/bl-curwidth bl-wordwidth bl-breakwidth add def
	    }{
		/bl-curwidth bl-curwidth bl-wordwidth add bl-breakwidth add def
	    } ifelse

	    % Mark last word break.
	    /bl-lastwordbreak bl-lastwordbreak bl-nextword length add 1 add def
	}{
	    pop exit
	} ifelse
    } loop

    % Process the last line.
    /bl-lastchar bl-textstring length def
    bl-textstring bl-startchar bl-lastchar bl-startchar sub getinterval bl-proc
} bind def

% Draw an arrowhead.
/arrowhead {			% X1 Y1 X2 Y2 arrowhead
    /ah-y2 exch def
    /ah-x2 exch def
    /ah-y1 exch def
    /ah-x1 exch def

    /ah-angle ah-y2 ah-y1 sub ah-x2 ah-x1 sub atan def
    /ah-size boxsize 10 div def

    gsave
	ah-x2 ah-y2 translate
	ah-angle rotate
	newpath
	0 0 moveto
	ah-size neg ah-size 2 div rlineto
	0 ah-size neg rlineto
	closepath 0 setgray fill
    grestore
} bind def

% Draw centred text.
/centredtext {			% STRING X Y centredtext
    gsave
	translate
	dup stringwidth pop neg 2 div
	currentfontsize neg 3 div
	moveto show 
    grestore
} bind def

% Add trailing space to a string.
/addspace {			% STRING addspace STRING
    dup length 1 add string /as-str exch def
    dup as-str exch 0 exch putinterval
    length as-str exch 32 put as-str
} def

% Select a font.
/selectfont {			% FONT SIZE selectfont
    /currentfontsize exch def
    findfont currentfontsize scalefont setfont
} bind def

% Convert to page coordinates.
/pagepos {			% X Y pagepos PX PY
    0.5 add boxsize mul heightoffset add exch
    0.5 add boxsize mul widthoffset add exch
} def

% Unused.
/pagecoords {
    boxsize dup scale
    widthoffset heightoffset translate
} def

% Print stack if debugging.
/stack {			% MESSAGE stack
    debug { (*** ) print print ( ***\n) print pstack } { pop } ifelse
} bind def

% Print a debugging message.
/msg {				% MESSAGE msg
    debug { print (\n) print } { pop } ifelse
} bind def

% Print a value if debugging.
/val {				% MESSAGE VALUE val
    debug { exch print == } { pop pop } ifelse
} bind def

% Standard definitions.
/cm {2.54 72 div mul} def
/debug false def
/degree {} def
/inch {72 mul} def
/max {2 copy gt {} {exch} ifelse pop} def
/min {2 copy lt {} {exch} ifelse pop} def
/mm {25.4 72 div mul} def
/percent {100 div mul} def
/point {} def

% Control variables.
/textspacing 0.1 def
/textmargin 0.1 def
/roomitemratio 0.6 def
